{"ast":null,"code":"import { catchError, map, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjectsService {\n  constructor(http) {\n    this.http = http;\n    this.Url = 'http://127.0.0.1:5050/api';\n  }\n  getData() {\n    let token = localStorage.getItem('TOKEN');\n    return this.http.get(this.Url + '/getprojects', {\n      headers: {\n        'content-type': 'application/json',\n        'authorization': token\n      }\n    }).pipe(map(obj => obj), catchError(err => {\n      console.log(err.status);\n      if ([400, 401, 404].includes(err.status)) {\n        return of(err.status);\n      } else {\n        return of(500);\n      }\n    }));\n  }\n  saveNewProject(body) {\n    let token = localStorage.getItem('TOKEN');\n    return this.http.post(this.Url + '/saveprojects', body, {\n      headers: {\n        'content-type': 'application/json',\n        'authorization': token\n      }\n    }).pipe(map(res => {\n      let record = res;\n      if (record['status'] == 'success') {\n        return 'ok';\n      } else {\n        return 'error';\n      }\n    }), catchError(err => {\n      return of('error');\n    }));\n  }\n  GetProjectByIdAndCheckDpgf(id) {\n    let token = localStorage.getItem('TOKEN');\n    let payload = {\n      _id: id\n    };\n    return this.http.post(this.Url + '/getprojectbyid', payload, {\n      headers: {\n        'content-type': 'application/json',\n        'authorization': token\n      }\n    });\n  }\n  DeletePeroject(id) {\n    let token = localStorage.getItem('TOKEN');\n    return this.http.post(this.Url + '/deleteProject', {\n      id\n    }, {\n      headers: {\n        'content-type': 'application/json',\n        'authorization': token\n      }\n    });\n  }\n}\nProjectsService.ɵfac = function ProjectsService_Factory(t) {\n  return new (t || ProjectsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProjectsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProjectsService,\n  factory: ProjectsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","map","of","ProjectsService","constructor","http","Url","getData","token","localStorage","getItem","get","headers","pipe","obj","err","console","log","status","includes","saveNewProject","body","post","res","record","GetProjectByIdAndCheckDpgf","id","payload","_id","DeletePeroject","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\Services\\projects.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, map, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  Url : string = 'http://127.0.0.1:5050/api'\r\n\r\n  constructor(private http  : HttpClient) { \r\n    \r\n  }\r\n\r\n  getData() : Observable<[Record<string,string>] | number>{\r\n    let token = localStorage.getItem('TOKEN') as string\r\n    return this.http.get(this.Url+'/getprojects',{headers : {'content-type' : 'application/json' , 'authorization'  : token}})\r\n    .pipe(\r\n      map(obj => obj as [Record<string,string>]),\r\n      catchError((err : HttpErrorResponse)=>{\r\n        console.log(err.status);\r\n        if ( [400,401,404].includes(err.status)) {\r\n          return of(err.status)\r\n        } else {\r\n          return of(500)\r\n        }\r\n        \r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  saveNewProject (body :any ) : Observable<string> { \r\n    let token = localStorage.getItem('TOKEN') as string\r\n    return this.http.post(this.Url+'/saveprojects',body,{headers : {'content-type' : 'application/json' , 'authorization' : token}})\r\n    .pipe(\r\n      map((res)=>{\r\n        let record = res as Record<string,string>\r\n        if (record['status'] == 'success') {\r\n          return 'ok'\r\n        }else{\r\n          return 'error'\r\n        }\r\n      }),\r\n      catchError((err : HttpErrorResponse)=>{\r\n        return of('error')\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  GetProjectByIdAndCheckDpgf(id : string | null){\r\n    let token = localStorage.getItem('TOKEN') as string\r\n    let payload  = {\r\n      _id : id\r\n    }\r\n    return this.http.post(this.Url+'/getprojectbyid',payload,{headers : {'content-type' : 'application/json' , 'authorization' : token}})\r\n    \r\n  }\r\nDeletePeroject(id : string){\r\n  let token = localStorage.getItem('TOKEN') as string\r\n  return this.http.post(this.Url+'/deleteProject', {id}, {headers : {'content-type' : 'application/json' , 'authorization' : token}})\r\n}\r\n\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,EAAEC,GAAG,EAAEC,EAAE,QAAQ,MAAM;;;AAKtD,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAkB;IAAlB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,GAAG,GAAY,2BAA2B;EAI1C;EAEAC,OAAOA,CAAA;IACL,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAW;IACnD,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACL,GAAG,GAAC,cAAc,EAAC;MAACM,OAAO,EAAG;QAAC,cAAc,EAAG,kBAAkB;QAAG,eAAe,EAAIJ;MAAK;IAAC,CAAC,CAAC,CACzHK,IAAI,CACHZ,GAAG,CAACa,GAAG,IAAIA,GAA8B,CAAC,EAC1Cd,UAAU,CAAEe,GAAuB,IAAG;MACpCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,MAAM,CAAC;MACvB,IAAK,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAACC,QAAQ,CAACJ,GAAG,CAACG,MAAM,CAAC,EAAE;QACvC,OAAOhB,EAAE,CAACa,GAAG,CAACG,MAAM,CAAC;OACtB,MAAM;QACL,OAAOhB,EAAE,CAAC,GAAG,CAAC;;IAIlB,CAAC,CAAC,CACH;EACH;EAEAkB,cAAcA,CAAEC,IAAS;IACvB,IAAIb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAW;IACnD,OAAO,IAAI,CAACL,IAAI,CAACiB,IAAI,CAAC,IAAI,CAAChB,GAAG,GAAC,eAAe,EAACe,IAAI,EAAC;MAACT,OAAO,EAAG;QAAC,cAAc,EAAG,kBAAkB;QAAG,eAAe,EAAGJ;MAAK;IAAC,CAAC,CAAC,CAC/HK,IAAI,CACHZ,GAAG,CAAEsB,GAAG,IAAG;MACT,IAAIC,MAAM,GAAGD,GAA4B;MACzC,IAAIC,MAAM,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAE;QACjC,OAAO,IAAI;OACZ,MAAI;QACH,OAAO,OAAO;;IAElB,CAAC,CAAC,EACFxB,UAAU,CAAEe,GAAuB,IAAG;MACpC,OAAOb,EAAE,CAAC,OAAO,CAAC;IACpB,CAAC,CAAC,CACH;EACH;EAGAuB,0BAA0BA,CAACC,EAAkB;IAC3C,IAAIlB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAW;IACnD,IAAIiB,OAAO,GAAI;MACbC,GAAG,EAAGF;KACP;IACD,OAAO,IAAI,CAACrB,IAAI,CAACiB,IAAI,CAAC,IAAI,CAAChB,GAAG,GAAC,iBAAiB,EAACqB,OAAO,EAAC;MAACf,OAAO,EAAG;QAAC,cAAc,EAAG,kBAAkB;QAAG,eAAe,EAAGJ;MAAK;IAAC,CAAC,CAAC;EAEvI;EACFqB,cAAcA,CAACH,EAAW;IACxB,IAAIlB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAW;IACnD,OAAO,IAAI,CAACL,IAAI,CAACiB,IAAI,CAAC,IAAI,CAAChB,GAAG,GAAC,gBAAgB,EAAE;MAACoB;IAAE,CAAC,EAAE;MAACd,OAAO,EAAG;QAAC,cAAc,EAAG,kBAAkB;QAAG,eAAe,EAAGJ;MAAK;IAAC,CAAC,CAAC;EACrI;;AAxDaL,eAAe,C;mBAAfA,eAAe,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAf9B,eAAe,C;SAAfA,eAAe;EAAA+B,OAAA,EAAf/B,eAAe,CAAAgC,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}