{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction FormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r1[0]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", field_r1[0], \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"type\", field_r1[0]);\n    i0.ɵɵpropertyInterpolate(\"name\", field_r1[0]);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.form.controls[i_r2]);\n  }\n}\nexport class FormComponent {\n  //// methods\n  constructor(formbuilder) {\n    this.formbuilder = formbuilder;\n    //Input\n    this.fieldList = [];\n    this.title = '';\n    this.button = '';\n    //Outut\n    this.notify = new EventEmitter();\n    //internal\n    this.form = this.formbuilder.array([]);\n  }\n  ngOnInit() {\n    this.fieldList.forEach(() => {\n      let newcontrol = this.formbuilder.control('');\n      this.form.push(newcontrol);\n    });\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  inputs: {\n    fieldList: \"fieldList\",\n    title: \"title\",\n    button: \"button\"\n  },\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[\"formArrayn\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"for\"], [\"id\", \"\", 3, \"type\", \"name\", \"formControl\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵtemplate(1, FormComponent_div_1_Template, 4, 5, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fieldList);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate","field_r1","ɵɵtextInterpolate1","ɵɵproperty","ctx_r0","form","controls","i_r2","FormComponent","constructor","formbuilder","fieldList","title","button","notify","array","ngOnInit","forEach","newcontrol","control","push","ɵɵdirectiveInject","i1","FormBuilder","selectors","inputs","outputs","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵtemplate","FormComponent_div_1_Template"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\auth\\form\\form.component.ts","C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\auth\\form\\form.component.html"],"sourcesContent":["import { Component, Input, Output,EventEmitter,OnInit } from '@angular/core';\nimport { FormArray, FormBuilder } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n  //Input\n  @Input() fieldList: string[][] =[]\n  @Input() title: string =''\n  @Input() button: string =''\n  //Outut\n  @Output() notify = new EventEmitter() \n  //internal\n  form = this.formbuilder.array([])\n//// methods\n  constructor(private formbuilder : FormBuilder){}\n  ngOnInit(){\n    this.fieldList.forEach(()=>{\n      let newcontrol = this.formbuilder.control('')\n      this.form.push(newcontrol)\n    })\n  }\n}\n","<form formArrayn >\n    <div *ngFor=\"let field of fieldList; index as  i\">\n        <label for=\"{{field[0]}}\">{{field[0]}} </label>\n        <input type=\"{{field[0]}}\" name=\"{{field[0]}}\" id=\"\" [formControl]=\"form.controls[i]\" />\n    </div>\n</form>\n"],"mappings":"AAAA,SAAkCA,YAAY,QAAe,eAAe;;;;;;ICCxEC,EAAA,CAAAC,cAAA,UAAkD;IACpBD,EAAA,CAAAE,MAAA,GAAa;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC/CH,EAAA,CAAAI,SAAA,eAAwF;IAC5FJ,EAAA,CAAAG,YAAA,EAAM;;;;;;IAFKH,EAAA,CAAAK,SAAA,GAAkB;IAAlBL,EAAA,CAAAM,qBAAA,QAAAC,QAAA,IAAkB;IAACP,EAAA,CAAAK,SAAA,GAAa;IAAbL,EAAA,CAAAQ,kBAAA,KAAAD,QAAA,SAAa;IAChCP,EAAA,CAAAK,SAAA,GAAmB;IAAnBL,EAAA,CAAAM,qBAAA,SAAAC,QAAA,IAAmB;IAACP,EAAA,CAAAM,qBAAA,SAAAC,QAAA,IAAmB;IAAOP,EAAA,CAAAS,UAAA,gBAAAC,MAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,IAAA,EAAgC;;;ADM7F,OAAM,MAAOC,aAAa;EAS1B;EACEC,YAAoBC,WAAyB;IAAzB,KAAAA,WAAW,GAAXA,WAAW;IAT/B;IACS,KAAAC,SAAS,GAAc,EAAE;IACzB,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,MAAM,GAAU,EAAE;IAC3B;IACU,KAAAC,MAAM,GAAG,IAAIrB,YAAY,EAAE;IACrC;IACA,KAAAY,IAAI,GAAG,IAAI,CAACK,WAAW,CAACK,KAAK,CAAC,EAAE,CAAC;EAEc;EAC/CC,QAAQA,CAAA;IACN,IAAI,CAACL,SAAS,CAACM,OAAO,CAAC,MAAI;MACzB,IAAIC,UAAU,GAAG,IAAI,CAACR,WAAW,CAACS,OAAO,CAAC,EAAE,CAAC;MAC7C,IAAI,CAACd,IAAI,CAACe,IAAI,CAACF,UAAU,CAAC;IAC5B,CAAC,CAAC;EACJ;;AAhBWV,aAAa,C;mBAAbA,aAAa,EAAAd,EAAA,CAAA2B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAbf,aAAa,C;QAAbA,aAAa;EAAAgB,SAAA;EAAAC,MAAA;IAAAd,SAAA;IAAAC,KAAA;IAAAC,MAAA;EAAA;EAAAa,OAAA;IAAAZ,MAAA;EAAA;EAAAa,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT1BtC,EAAA,CAAAC,cAAA,cAAkB;MACdD,EAAA,CAAAwC,UAAA,IAAAC,4BAAA,iBAGM;MACVzC,EAAA,CAAAG,YAAA,EAAO;;;MAJoBH,EAAA,CAAAK,SAAA,GAAc;MAAdL,EAAA,CAAAS,UAAA,YAAA8B,GAAA,CAAAtB,SAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}