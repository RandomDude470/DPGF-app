{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class PostComponent {\n  constructor() {\n    this.PostId = \"\";\n    this.notify = new EventEmitter();\n    this.form = new FormGroup({\n      designation: new FormControl(''),\n      qte: new FormControl(''),\n      unit: new FormControl(''),\n      tva: new FormControl(''),\n      pu: new FormControl(''),\n      total: new FormControl('')\n    });\n    this.total = 0;\n  }\n  OnBlur() {\n    let obj = this.form.value;\n    let qte = Number(this.form.value.qte);\n    let pu = Number(this.form.value.pu);\n    let tva = isNaN(Number(this.form.value.tva)) ? 0 : Number(this.form.value.tva);\n    this.total = isNaN(pu) || isNaN(qte) ? 0 : pu * qte + pu * qte * tva / 100;\n    obj['total'] = String(this.total);\n    console.log(obj);\n    this.notify.emit(obj);\n  }\n}\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)();\n};\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  inputs: {\n    PostId: \"PostId\"\n  },\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 12,\n  vars: 6,\n  consts: [[\"type\", \"text\", 3, \"formControl\", \"blur\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"td\")(1, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_1_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(2, \"td\")(3, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_3_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"td\")(5, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_5_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"td\")(7, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_7_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"td\")(9, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_9_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"td\");\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.designation);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.qte);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.unit);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.tva);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.pu);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.total);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","FormControl","FormGroup","PostComponent","constructor","PostId","notify","form","designation","qte","unit","tva","pu","total","OnBlur","obj","value","Number","isNaN","String","console","log","emit","selectors","inputs","outputs","decls","vars","consts","template","PostComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","PostComponent_Template_input_blur_1_listener","ɵɵelementEnd","PostComponent_Template_input_blur_3_listener","PostComponent_Template_input_blur_5_listener","PostComponent_Template_input_blur_7_listener","PostComponent_Template_input_blur_9_listener","ɵɵtext","ɵɵadvance","ɵɵproperty","controls","ɵɵtextInterpolate"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\post\\post.component.ts","C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\post\\post.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\nexport class PostComponent {\n\n  @Input() PostId : string = \"\"\n  @Output()  notify = new EventEmitter()\n  form = new FormGroup({\n    designation : new FormControl(''),\n    qte :  new FormControl(''),\n    unit : new FormControl(''),\n    tva : new FormControl(''),\n    pu : new FormControl(''),\n    total : new FormControl('')\n  })\n  total = 0\n\n  OnBlur(){\n    let obj  = this.form.value as Record<string,string>\n    let qte = Number(this.form.value.qte)\n    let pu = Number(this.form.value.pu)\n    let tva = (isNaN(Number(this.form.value.tva)))? 0: Number(this.form.value.tva)\n    this.total = (isNaN(pu) || isNaN(qte) )? 0 : pu *qte+pu*qte*tva/100\n    obj['total'] = String(this.total)\n    console.log(obj);\n    this.notify.emit(obj)\n   }\n   \n}\n","<td><input type=\"text\" [formControl]=\"form.controls.designation\" (blur)=\"OnBlur()\"></td>\n<td><input type=\"text\" [formControl]=\"form.controls.qte\" (blur)=\"OnBlur()\"></td>\n<td><input type=\"text\" [formControl]=\"form.controls.unit\" (blur)=\"OnBlur()\"></td>\n<td><input type=\"text\" [formControl]=\"form.controls.tva\" (blur)=\"OnBlur()\"></td>\n<td><input type=\"text\" [formControl]=\"form.controls.pu\" (blur)=\"OnBlur()\"></td>\n<td>{{total}}</td>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}