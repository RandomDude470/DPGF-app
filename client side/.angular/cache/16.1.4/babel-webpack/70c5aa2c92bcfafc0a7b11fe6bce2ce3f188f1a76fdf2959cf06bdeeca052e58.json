{"ast":null,"code":"import { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { inject } from \"@angular/core\";\nimport { AuthService } from '../Services/auth.service';\nexport const loginGuard = (route, state) => {\n  const cookie = inject(CookieService);\n  const auth = inject(AuthService);\n  const router = inject(Router);\n  let token = cookie.get(\"TOKEN\");\n  console.log(`cookie from auth guard  : ${token}`);\n  return auth.Validate({\n    \"token\": token\n  }).then(res => {\n    if (res == true) {\n      return true;\n    } else {\n      router.navigate([\"/auth/login\"]);\n      return false;\n    }\n  });\n};","map":{"version":3,"names":["Router","CookieService","inject","AuthService","loginGuard","route","state","cookie","auth","router","token","get","console","log","Validate","then","res","navigate"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\auth\\login.guard.ts"],"sourcesContent":["import { CanActivateFn, Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport {inject} from \"@angular/core\"\r\nimport { AuthService } from '../Services/auth.service';\r\n\r\nexport const loginGuard: CanActivateFn = (route, state) => {\r\n  const cookie = inject(CookieService)\r\n  const auth = inject(AuthService)\r\n  const router = inject(Router)\r\n  let token = cookie.get(\"TOKEN\")\r\n  console.log(`cookie from auth guard  : ${token}`);\r\n  \r\n  return auth.Validate({\"token\" : token}).then((res)=>{\r\n    if (res == true) {\r\n      return true\r\n    }else{\r\n      router.navigate([\"/auth/login\"])\r\n      return false\r\n    }\r\n  });\r\n    \r\n  \r\n};\r\n"],"mappings":"AAAA,SAAwBA,MAAM,QAAQ,iBAAiB;AACvD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAAQC,MAAM,QAAO,eAAe;AACpC,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,UAAU,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACxD,MAAMC,MAAM,GAAGL,MAAM,CAACD,aAAa,CAAC;EACpC,MAAMO,IAAI,GAAGN,MAAM,CAACC,WAAW,CAAC;EAChC,MAAMM,MAAM,GAAGP,MAAM,CAACF,MAAM,CAAC;EAC7B,IAAIU,KAAK,GAAGH,MAAM,CAACI,GAAG,CAAC,OAAO,CAAC;EAC/BC,OAAO,CAACC,GAAG,CAAC,6BAA6BH,KAAK,EAAE,CAAC;EAEjD,OAAOF,IAAI,CAACM,QAAQ,CAAC;IAAC,OAAO,EAAGJ;EAAK,CAAC,CAAC,CAACK,IAAI,CAAEC,GAAG,IAAG;IAClD,IAAIA,GAAG,IAAI,IAAI,EAAE;MACf,OAAO,IAAI;KACZ,MAAI;MACHP,MAAM,CAACQ,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB,CAAC,CAAC;AAGJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}