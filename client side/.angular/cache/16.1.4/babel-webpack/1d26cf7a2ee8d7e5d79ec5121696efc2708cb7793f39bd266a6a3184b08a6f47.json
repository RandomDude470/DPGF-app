{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class PostComponent {\n  constructor() {\n    // = {\n    //   id: '',\n    //   designation: '',\n    //   pu: '',\n    //   tva: '',\n    //   total: '',\n    //   unit: '',\n    //   qte: ''\n    // };\n    this.notify = new EventEmitter();\n    this.form = new FormGroup({\n      designation: new FormControl(this.Post.designation),\n      qte: new FormControl(this.Post.qte),\n      unit: new FormControl(this.Post.unit),\n      tva: new FormControl(this.Post.tva),\n      pu: new FormControl(this.Post.pu),\n      total: new FormControl(this.Post.total)\n    });\n    this.total = 0;\n  }\n  OnBlur() {\n    let obj = this.form.value;\n    if (this.Post.id != '') {\n      obj['id'] = this.Post.id;\n    } else {\n      throw new Error('No Post Id');\n    }\n    let qte = Number(this.form.value.qte);\n    let pu = Number(this.form.value.pu);\n    let tva = isNaN(Number(this.form.value.tva)) ? 0 : Number(this.form.value.tva);\n    this.total = isNaN(pu) || isNaN(qte) ? 0 : pu * qte + pu * qte * tva / 100;\n    obj['total'] = String(this.total);\n    console.log(obj);\n    this.notify.emit(obj);\n  }\n  ngOnInit() {\n    console.log(this.Post);\n  }\n}\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)();\n};\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  inputs: {\n    Post: \"Post\"\n  },\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 13,\n  vars: 2,\n  consts: [[3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"designation\", 3, \"blur\"], [\"type\", \"text\", \"formControlName\", \"qte\", 3, \"blur\"], [\"type\", \"text\", \"formControlName\", \"unit\", 3, \"blur\"], [\"type\", \"text\", \"formControlName\", \"tva\", 3, \"blur\"], [\"type\", \"text\", \"formControlName\", \"pu\", 3, \"blur\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"tr\", 0)(1, \"td\")(2, \"input\", 1);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_2_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"td\")(4, \"input\", 2);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_4_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"td\")(6, \"input\", 3);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_6_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"td\")(8, \"input\", 4);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_8_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"td\")(10, \"input\", 5);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_10_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"td\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate(ctx.total);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"input[_ngcontent-%COMP%] {\\n  width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZHBnZi9wb3N0L3Bvc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dHtcclxuICAgIHdpZHRoOiAxMDBweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["EventEmitter","FormControl","FormGroup","PostComponent","constructor","notify","form","designation","Post","qte","unit","tva","pu","total","OnBlur","obj","value","id","Error","Number","isNaN","String","console","log","emit","ngOnInit","selectors","inputs","outputs","decls","vars","consts","template","PostComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","PostComponent_Template_input_blur_2_listener","ɵɵelementEnd","PostComponent_Template_input_blur_4_listener","PostComponent_Template_input_blur_6_listener","PostComponent_Template_input_blur_8_listener","PostComponent_Template_input_blur_10_listener","ɵɵtext","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\post\\post.component.ts","C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\post\\post.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n})\nexport class PostComponent implements OnInit {\n  @Input() Post: {\n    id: string;\n    designation: string;\n    pu: string;\n    tva: string;\n    total: string;\n    unit: string;\n    qte: string;\n  }\n  // = {\n  //   id: '',\n  //   designation: '',\n  //   pu: '',\n  //   tva: '',\n  //   total: '',\n  //   unit: '',\n  //   qte: ''\n  // };\n  @Output() notify = new EventEmitter();\n  form : FormGroup = new FormGroup({\n    designation: new FormControl(this.Post.designation),\n    qte: new FormControl(this.Post.qte),\n    unit: new FormControl(this.Post.unit),\n    tva: new FormControl(this.Post.tva),\n    pu: new FormControl(this.Post.pu),\n    total: new FormControl(this.Post.total),\n  });\n  total = 0;\n\n  OnBlur() {\n    let obj = this.form.value as Record<string, string>;\n    if (this.Post.id != '') {\n      obj['id'] = this.Post.id;\n    } else {\n      throw new Error('No Post Id');\n    }\n    let qte = Number(this.form.value.qte);\n    let pu = Number(this.form.value.pu);\n    let tva = isNaN(Number(this.form.value.tva))? 0: Number(this.form.value.tva);\n    this.total = isNaN(pu) || isNaN(qte) ? 0 : pu * qte + (pu * qte * tva) / 100;\n    obj['total'] = String(this.total);\n    console.log(obj);\n    this.notify.emit(obj);\n  }\n  ngOnInit(){\n    console.log(this.Post);\n    \n  }\n}\n","<tr [formGroup]=\"form\">\n    <td><input type=\"text\" formControlName=\"designation\" (blur)=\"OnBlur()\"></td>\n    <td><input type=\"text\" formControlName=\"qte\" (blur)=\"OnBlur()\"></td>\n    <td><input type=\"text\" formControlName=\"unit\" (blur)=\"OnBlur()\"></td>\n    <td><input type=\"text\" formControlName=\"tva\" (blur)=\"OnBlur()\"></td>\n    <td><input type=\"text\" formControlName=\"pu\" (blur)=\"OnBlur()\"></td>\n    <td>{{total}}</td>\n    \n</tr>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}