{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  Login(data) {\n    this.http.post(\"http://127.0.0.1:5500/auth/login\", JSON.stringify(data), {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).subscribe(response => {\n      let res = response;\n      if (res[\"status\"] == \"success\") {\n        document.cookie = `TOKEN=${res[\"token\"]};path=/;`;\n        return \"success\";\n      } else if (res[\"status\"] == \"bad login\") {\n        return \"Bad Login\";\n      } else {\n        return \"Server Error\";\n      }\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","Login","data","post","JSON","stringify","headers","subscribe","response","res","document","cookie","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\Services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient }from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http : HttpClient) { }\n\n  Login( data : Record<string,string>){\n    \n    this.http.post(\"http://127.0.0.1:5500/auth/login\",JSON.stringify(data),{headers : {\"Content-type\" : \"application/json\"}})\n    .subscribe((response )=>{\n      let res = response as Record<string,string>\n      if (res[\"status\"] == \"success\") {\n        document.cookie = `TOKEN=${res[\"token\"]};path=/;`\n        return \"success\"\n      }\n      else if(res[\"status\"]== \"bad login\"){\n        return \"Bad Login\"\n      }\n      else{\n        return \"Server Error\"\n      }\n    })\n      \n\n    \n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EAAiB;EAEzCC,KAAKA,CAAEC,IAA4B;IAEjC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,kCAAkC,EAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EAAC;MAACI,OAAO,EAAG;QAAC,cAAc,EAAG;MAAkB;IAAC,CAAC,CAAC,CACxHC,SAAS,CAAEC,QAAQ,IAAI;MACtB,IAAIC,GAAG,GAAGD,QAAiC;MAC3C,IAAIC,GAAG,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAE;QAC9BC,QAAQ,CAACC,MAAM,GAAG,SAASF,GAAG,CAAC,OAAO,CAAC,UAAU;QACjD,OAAO,SAAS;OACjB,MACI,IAAGA,GAAG,CAAC,QAAQ,CAAC,IAAG,WAAW,EAAC;QAClC,OAAO,WAAW;OACnB,MACG;QACF,OAAO,cAAc;;IAEzB,CAAC,CAAC;EAIJ;;AAvBWX,WAAW,C;mBAAXA,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXjB,WAAW,C;SAAXA,WAAW;EAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}