{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../post/post.component\";\nfunction SousLotComponent_app_post_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-post\", 1);\n    i0.ɵɵlistener(\"notify\", function SousLotComponent_app_post_15_Template_app_post_notify_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.OnNotify($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"Post\", post_r1);\n  }\n}\nexport class SousLotComponent {\n  constructor() {\n    this.SousLot = {\n      id: '',\n      posts: [{\n        id: '123',\n        designation: 'whateveer',\n        unit: 'm',\n        total: '200',\n        qte: '10',\n        pu: '20',\n        tva: ''\n      }, {\n        id: '124',\n        designation: 'whateveer',\n        unit: 'm',\n        total: '20',\n        qte: '1',\n        pu: '20',\n        tva: ''\n      }]\n    };\n    this.notify = new EventEmitter();\n  }\n  checkForIdAndReplace(replacement) {\n    let i = 0;\n    let flag = 0;\n    this.SousLot.posts.forEach(post => {\n      if (post.id == replacement.id) {\n        this.SousLot.posts[i] = replacement;\n        flag = 1;\n      }\n      i++;\n    });\n    return flag;\n  }\n  ngOnInit() {}\n  OnNotify(data) {\n    if (this.checkForIdAndReplace(data) == 0) {\n      data.id = String(new Date().getTime());\n      this.SousLot.posts.push(data);\n    }\n    console.log(\"after save souslot\");\n    console.log(this.SousLot.posts);\n  }\n}\nSousLotComponent.ɵfac = function SousLotComponent_Factory(t) {\n  return new (t || SousLotComponent)();\n};\nSousLotComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SousLotComponent,\n  selectors: [[\"app-sous-lot\"]],\n  inputs: {\n    SousLot: \"SousLot\"\n  },\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 19,\n  vars: 1,\n  consts: [[\"style\", \"display: contents;\", 3, \"Post\", \"notify\", 4, \"ngFor\", \"ngForOf\"], [2, \"display\", \"contents\", 3, \"Post\", \"notify\"]],\n  template: function SousLotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"th\");\n      i0.ɵɵtext(3, \"Designation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"th\");\n      i0.ɵɵtext(5, \"qte\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"unit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"tva\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"prix unitaire\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Total\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, SousLotComponent_app_post_15_Template, 1, 1, \"app-post\", 0);\n      i0.ɵɵelementStart(16, \"tr\")(17, \"td\");\n      i0.ɵɵtext(18, \"+ Nouveau poste\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.SousLot.posts);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.PostComponent],\n  styles: [\"table[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nthead[_ngcontent-%COMP%] {\\n  background-color: rgb(103, 0, 194);\\n  color: white;\\n  height: 2rem;\\n}\\n\\ntr[_ngcontent-%COMP%]:last-child {\\n  background-color: #ca8fff;\\n  column-span: all;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZHBnZi9zb3VzLWxvdC9zb3VzLWxvdC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvX0dsb2JhbFZhcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLFdBQUE7QUFGSjs7QUFJQTtFQUNJLGtDQ1BhO0VEUWIsWUNQZTtFRFFmLFlBQUE7QUFESjs7QUFHQTtFQUNJLHlCQUFBO0VBQ0EsZ0JBQUE7QUFBSiIsInNvdXJjZXNDb250ZW50IjpbIkB1c2UgJy9zcmMvYXNzZXRzL0dsb2JhbFZhcnMnIGFzIHZhcnM7XHJcbkB1c2UgJy9zcmMvYXNzZXRzL21peGlucycgYXMgbWl4O1xyXG5cclxudGFibGV7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG50aGVhZHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcnMuJGNvbG9yLXByaW1hcnk7XHJcbiAgICBjb2xvcjogdmFycy4kY29sb3Itc2Vjb25kYXJ5O1xyXG4gICAgaGVpZ2h0OiAycmVtO1xyXG59XHJcbnRyOmxhc3QtY2hpbGR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKHZhcnMuJGNvbG9yLXByaW1hcnkgLCA0MCk7XHJcbiAgICBjb2x1bW4tc3BhbjogYWxsO1xyXG59IiwiJGNvbG9yLXByaW1hcnkgOiByZ2IoMTAzLCAwLCAxOTQpO1xyXG4kY29sb3Itc2Vjb25kYXJ5IDogd2hpdGU7XHJcbiRjb2xvci1iYWNrZ3JvdW5kIDogI2Y1ZjdmYiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","SousLotComponent_app_post_15_Template_app_post_notify_0_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","OnNotify","ɵɵelementEnd","ɵɵproperty","post_r1","SousLotComponent","constructor","SousLot","id","posts","designation","unit","total","qte","pu","tva","notify","checkForIdAndReplace","replacement","i","flag","forEach","post","ngOnInit","data","String","Date","getTime","push","console","log","selectors","inputs","outputs","decls","vars","consts","template","SousLotComponent_Template","rf","ctx","ɵɵtext","ɵɵtemplate","SousLotComponent_app_post_15_Template","ɵɵadvance"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\sous-lot\\sous-lot.component.ts","C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\sous-lot\\sous-lot.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\ntype post   ={\n  id: string;\n  designation: string;\n  unit: string;\n  total: string;\n  qte: string;\n  pu: string;\n  tva: string;\n}\n\n@Component({\n  selector: 'app-sous-lot',\n  templateUrl: './sous-lot.component.html',\n  styleUrls: ['./sous-lot.component.scss']\n})\nexport class SousLotComponent implements OnInit {\n  @Input() SousLot = {\n    id : '',\n    posts : [\n      {\n        id : '123', \n        designation : 'whateveer',\n        unit : 'm',\n        total : '200',\n        qte : '10',\n        pu : '20',\n        tva : ''\n      },\n      {\n        id : '124', \n        designation : 'whateveer',\n        unit : 'm',\n        total : '20',\n        qte : '1',\n        pu : '20',\n        tva : ''\n      }\n    ]\n  }\n  @Output() notify = new EventEmitter()\n\n \n\n\n  checkForIdAndReplace( replacement : post) : 1 | 0 {\n    let i = 0 \n    let flag : 1 | 0 = 0\n    this.SousLot.posts.forEach((post)=>{\n      if (post.id == replacement.id){\n        this.SousLot.posts[i] = replacement\n        flag =1\n      }\n      i++\n    })\n    return flag\n  } \n  ngOnInit(){\n    \n  }\n  OnNotify(data : post){\n    if (this.checkForIdAndReplace(data) == 0) {\n      data.id = String(new Date().getTime())\n      this.SousLot.posts.push(data)\n    }\n    console.log(\"after save souslot\");\n    console.log(this.SousLot.posts);\n    \n    \n    \n  }\n\n}\n","<table>\n    <thead>\n        <th>Designation</th>\n        <th>qte</th>\n        <th>unit</th>\n        <th>tva</th>\n        <th>prix unitaire</th>\n        <th>Total</th>\n\n    </thead>\n    <tbody>\n      \n        <app-post *ngFor=\"let post of SousLot.posts\"  [Post]=\"post\" (notify)=\"OnNotify($event)\" style=\"display: contents;\"></app-post>\n        <tr>\n\n            <td>+ Nouveau poste</td>\n        </tr>\n    </tbody>\n</table>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}