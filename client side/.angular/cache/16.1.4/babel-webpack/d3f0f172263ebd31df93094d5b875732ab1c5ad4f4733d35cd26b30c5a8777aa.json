{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction FormComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 6);\n    i0.ɵɵtext(1, \"<-- Go Back \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r4[0]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", field_r4[0] + \" :\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"type\", field_r4[1]);\n    i0.ɵɵpropertyInterpolate(\"name\", field_r4[0]);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", field_r4[0] + \"...\");\n    i0.ɵɵproperty(\"formControl\", ctx_r1.form.controls[i_r5]);\n  }\n}\nfunction FormComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1, \"All fields are required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.error);\n  }\n}\nexport class FormComponent {\n  //// methods\n  constructor(formbuilder) {\n    this.formbuilder = formbuilder;\n    //Input\n    this.fieldList = [];\n    this.title = '';\n    this.formType = 'register';\n    this.button = '';\n    //Outut\n    this.notify = new EventEmitter();\n    //internal\n    this.form = this.formbuilder.array([]);\n    this.emptyFields = false;\n    this.formInputs = {\n      register: [['Username', 'text'], ['Email', 'text'], ['Password', 'password']],\n      login: [['Email', 'text'], ['Password', 'password']],\n      projects: [['name', 'text'], ['adresse', 'text'], ['budget', 'number'], ['surface', 'number'], ['date', 'date']]\n    };\n    this.NewFieldCounter = 1;\n  }\n  ngOnInit() {\n    this.formInputs[this.formType].forEach(() => {\n      let newcontrol = this.formbuilder.control('', {\n        validators: [Validators.required]\n      });\n      this.form.push(newcontrol);\n    });\n  }\n  OnSubmit() {\n    if (this.form.valid) {\n      this.emptyFields = false;\n      let newRecord = {};\n      newRecord['Lots'] = [];\n      let i = 0;\n      this.formInputs[this.formType].forEach(field => {\n        if (i <= 4) {\n          newRecord[field[0].toLowerCase()] = this.form.value.at(i);\n        } else {\n          newRecord[\"Lots\"].push({\n            name: this.form.value.at(i)\n          });\n        }\n        i++;\n      });\n      this.notify.emit(newRecord);\n      console.log(newRecord);\n    } else {\n      this.emptyFields = true;\n    }\n  }\n  OnClickAddField() {\n    console.log('stuff happeninng');\n    let newcontrol = this.formbuilder.control('', {\n      validators: [Validators.required]\n    });\n    this.form.push(newcontrol);\n    this.formInputs[this.formType].push(['Lot ' + this.NewFieldCounter, 'text']);\n    this.NewFieldCounter++;\n    // console.log(this.fieldList);\n    // this.ngOnInit()\n  }\n}\n\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  inputs: {\n    fieldList: \"fieldList\",\n    title: \"title\",\n    formType: \"formType\",\n    button: \"button\",\n    error: \"error\"\n  },\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 11,\n  vars: 6,\n  consts: [[3, \"submit\"], [\"routerLink\", \"/home/project/list\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"style\", \"color:red\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\"], [\"routerLink\", \"/home/project/list\"], [3, \"for\"], [3, \"type\", \"name\", \"formControl\", \"placeholder\"], [2, \"color\", \"red\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function FormComponent_Template_form_submit_0_listener() {\n        return ctx.OnSubmit();\n      });\n      i0.ɵɵtemplate(1, FormComponent_a_1_Template, 2, 0, \"a\", 1);\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FormComponent_div_4_Template, 4, 6, \"div\", 2);\n      i0.ɵɵtemplate(5, FormComponent_p_5_Template, 2, 0, \"p\", 3);\n      i0.ɵɵtemplate(6, FormComponent_p_6_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_7_listener() {\n        return ctx.OnClickAddField();\n      });\n      i0.ɵɵtext(8, \"add new field\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formType == \"projects\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formInputs[ctx.formType]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.emptyFields);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.button);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgForm, i1.FormControlDirective],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-inline: auto;\\n  align-items: center;\\n  justify-items: center;\\n  box-sizing: border-box;\\n  max-width: 30vw;\\n  min-width: 440px;\\n  row-gap: 1rem;\\n  border: solid 1px #9b29ff;\\n  border-radius: 30px;\\n  padding-inline: 1rem;\\n  padding-block: 2rem;\\n  background-color: white;\\n  box-shadow: 2px 1px 0px 0px;\\n  max-height: 80vh;\\n  overflow: auto;\\n}\\nform[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  width: 100%;\\n  box-sizing: border-box;\\n}\\nform[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  font-size: 3.5rem;\\n  font-weight: 700;\\n  color: #18002e;\\n  margin-bottom: 3rem;\\n}\\nform[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  color: white;\\n  background-color: #8a05ff;\\n  padding-inline: 3rem;\\n  padding-block: 0.2rem;\\n  border: none;\\n  border-radius: 20px;\\n  font-size: 1.3rem;\\n  font-weight: 500;\\n  box-shadow: 1px rgb(103, 0, 194);\\n  margin-top: 4rem;\\n  border: solid 1px white;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\nform[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: white;\\n  color: #8a05ff;\\n  border: solid 1px #9b29ff;\\n}\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  width: 100%;\\n  justify-content: space-between;\\n}\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  margin-block: auto;\\n  text-align: left;\\n  color: #18002e;\\n}\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  height: 2rem;\\n  width: 70%;\\n  padding-block: 0.3rem;\\n  padding-inline: 0.8rem;\\n  border: solid #bc70ff 1px;\\n  border-radius: 2000px;\\n}\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder {\\n  color: rgb(221, 221, 221);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvamVjdC9mb3JtL2Zvcm0uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi9zcmMvYXNzZXRzL19taXhpbnMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvX0dsb2JhbFZhcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQ0lJLGFBQUE7RUFDQSxzQkFBQTtFREhBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxvQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSwyQkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtBQURKO0FBR0k7RUFDSSxXQUFBO0VBQ0Esc0JBQUE7QUFEUjtBQUlJO0VBQ0ksaUJBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtBQUZSO0FBS0k7RUNOQSxZQzFCZTtFRDJCZix5QkFBQTtFQUNBLG9CREs0RTtFQ0o1RSxxQkRJaUY7RUNIakYsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJEQ3FFO0VDQXJFLGdCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0VBQ0EsZUFBQTtFQUNBLGlDQUFBO0FESUo7QUNISTtFQUNJLHVCQ3hDVztFRHlDWCxjQUFBO0VBQ0EseUJBQUE7QURLUjtBQVZJO0VDbkNBLGFBQUE7RUFDQSxtQkFBQTtFRG9DSSxXQUFBO0VBQ0EsOEJBQUE7QUFhUjtBQVhRO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFhWjtBQVhRO0VBQ0ksWUFBQTtFQUNBLFVBQUE7RUFDQSxxQkFBQTtFQUNBLHNCQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtBQWFaO0FBWFE7RUFDSSx5QkFBQTtBQWFaIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSAgJy4uLy4uLy4uL2Fzc2V0cy9HbG9iYWxWYXJzJyBhcyB2YXJzO1xyXG5AdXNlICcuLi8uLi8uLi9hc3NldHMvbWl4aW5zJyBhcyBtaXhpbnM7XHJcbiBcclxuZm9ybXtcclxuICAgIEBpbmNsdWRlIG1peGlucy5mbGV4LXZlciA7XHJcbiAgICBtYXJnaW4taW5saW5lOiBhdXRvO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBtYXgtd2lkdGg6IDMwdnc7XHJcbiAgICBtaW4td2lkdGg6IDQ0MHB4O1xyXG4gICAgcm93LWdhcDogMXJlbTtcclxuICAgIGJvcmRlcjogc29saWQgMXB4IGxpZ2h0ZW4oJGNvbG9yOiB2YXJzLiRjb2xvci1wcmltYXJ5LCAkYW1vdW50OiAyMCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgcGFkZGluZy1pbmxpbmU6IDFyZW0gO1xyXG4gICAgcGFkZGluZy1ibG9jazoycmVtIDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgYm94LXNoYWRvdzogMnB4IDFweCAwcHggMHB4O1xyXG4gICAgbWF4LWhlaWdodDogODB2aDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgXHJcbiAgICBhe1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICB9XHJcblxyXG4gICAgaDN7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjVyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICBjb2xvcjogZGFya2VuKCRjb2xvcjogdmFycy4kY29sb3ItcHJpbWFyeSwgJGFtb3VudDogMjkpO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDNyZW0gO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIEBpbmNsdWRlIG1peGlucy5idXR0b24odmFycy4kY29sb3ItcHJpbWFyeSx2YXJzLiRjb2xvci1zZWNvbmRhcnksMS4zcmVtLDNyZW0sLjJyZW0pO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIGRpdntcclxuICAgICAgICBAaW5jbHVkZSBtaXhpbnMuZmxleC1ob3IgO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgICAgICAgbGFiZWx7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ibG9jazogYXV0bztcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgICAgY29sb3I6IGRhcmtlbigkY29sb3I6IHZhcnMuJGNvbG9yLXByaW1hcnksICRhbW91bnQ6IDI5KVxyXG4gICAgICAgIH1cclxuICAgICAgICBpbnB1dHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAycmVtO1xyXG4gICAgICAgICAgICB3aWR0aDogNzAlO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJsb2NrOiAuM3JlbTtcclxuICAgICAgICAgICAgcGFkZGluZy1pbmxpbmU6IC44cmVtO1xyXG4gICAgICAgICAgICBib3JkZXI6IHNvbGlkIGxpZ2h0ZW4oJGNvbG9yOiB2YXJzLiRjb2xvci1wcmltYXJ5LCAkYW1vdW50OiAzNCkgMXB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMDAwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlucHV0OjpwbGFjZWhvbGRlcntcclxuICAgICAgICAgICAgY29sb3I6IHJnYigyMjEsIDIyMSwgMjIxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbn1cclxuXHJcbiIsIkB1c2UgJy4vR2xvYmFsVmFycycgYXMgdmFycztcclxuXHJcbkBtaXhpbiBmbGV4LWhvciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxufVxyXG5AbWl4aW4gZmxleC12ZXJ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5AbWl4aW4gZmxleC12ZXItY2Vue1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuQG1peGluIGZsZXgtaG9yLWNlbntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbkBtaXhpbiBtYXJnaW4tYXV0by1jZW50ZXIge1xyXG4gICAgZGlzcGxheSA6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWlubGluZSA6IGF1dG87XHJcbn1cclxuQG1peGluIGJ1dHRvbigkcHIgLCAkc2VjLCRmb250LXNpemUgLCAkcGFkZGluZy1pbmxpbmUsICRwYWRkaW5nLWJsb2NrKSB7XHJcbiAgICBjb2xvciA6ICRzZWM7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRjb2xvcjogJHByICwgJGFtb3VudDogMTMpO1xyXG4gICAgcGFkZGluZy1pbmxpbmU6ICRwYWRkaW5nLWlubGluZTtcclxuICAgIHBhZGRpbmctYmxvY2s6ICRwYWRkaW5nLWJsb2NrO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1cyA6IDIwcHg7XHJcbiAgICBmb250LXNpemUgOiAkZm9udC1zaXplIDtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBib3gtc2hhZG93OiAxcHggJHByO1xyXG4gICAgbWFyZ2luLXRvcDogNHJlbTtcclxuICAgIGJvcmRlcjogc29saWQgMXB4ICRzZWM7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4zcztcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlYztcclxuICAgICAgICBjb2xvcjogbGlnaHRlbigkY29sb3I6ICRwciAsICRhbW91bnQ6IDEzKTtcclxuICAgICAgICBib3JkZXI6IHNvbGlkIDFweCBsaWdodGVuKCRjb2xvcjogJHByLCAkYW1vdW50OiAyMCk7XHJcblxyXG4gICAgfVxyXG59XHJcbkBtaXhpbiByb3VuZC1ib3gge1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggbGlnaHRlbigkY29sb3I6IHZhcnMuJGNvbG9yLXByaW1hcnksICRhbW91bnQ6IDIwKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbiAgICBwYWRkaW5nLWlubGluZTogMXJlbSA7XHJcbiAgICBwYWRkaW5nLWJsb2NrOjJyZW0gO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn0iLCIkY29sb3ItcHJpbWFyeSA6IHJnYigxMDMsIDAsIDE5NCk7XHJcbiRjb2xvci1zZWNvbmRhcnkgOiB3aGl0ZTtcclxuJGNvbG9yLWJhY2tncm91bmQgOiAjZjVmN2ZiIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate","field_r4","ɵɵtextInterpolate1","ɵɵproperty","ctx_r1","form","controls","i_r5","ɵɵtextInterpolate","ctx_r3","error","FormComponent","constructor","formbuilder","fieldList","title","formType","button","notify","array","emptyFields","formInputs","register","login","projects","NewFieldCounter","ngOnInit","forEach","newcontrol","control","validators","required","push","OnSubmit","valid","newRecord","i","field","toLowerCase","value","at","name","emit","console","log","OnClickAddField","ɵɵdirectiveInject","i1","FormBuilder","selectors","inputs","outputs","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵlistener","FormComponent_Template_form_submit_0_listener","ɵɵtemplate","FormComponent_a_1_Template","FormComponent_div_4_Template","FormComponent_p_5_Template","FormComponent_p_6_Template","FormComponent_Template_button_click_7_listener"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\project\\form\\form.component.ts","C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\project\\form\\form.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n})\r\nexport class FormComponent implements OnInit {\r\n  //Input\r\n  @Input() fieldList: string[][] = [];\r\n  @Input() title: string = '';\r\n  @Input() formType: string = 'register';\r\n\r\n  @Input() button: string = '';\r\n  @Input() error: string | undefined;\r\n  //Outut\r\n  @Output() notify = new EventEmitter();\r\n  //internal\r\n  form = this.formbuilder.array([]);\r\n  emptyFields = false;\r\n  public formInputs: any = {\r\n    register: [\r\n      ['Username', 'text'],\r\n      ['Email', 'text'],\r\n      ['Password', 'password'],\r\n    ],\r\n    login: [\r\n      ['Email', 'text'],\r\n      ['Password', 'password'],\r\n    ],\r\n    projects: [\r\n      ['name', 'text'],\r\n      ['adresse', 'text'],\r\n      ['budget', 'number'],\r\n      ['surface', 'number'],\r\n      ['date', 'date'],\r\n    ],\r\n  };\r\n  NewFieldCounter: number = 1;\r\n  //// methods\r\n  constructor(private formbuilder: FormBuilder) {}\r\n  ngOnInit() {\r\n    this.formInputs[this.formType].forEach(() => {\r\n      let newcontrol = this.formbuilder.control('', {\r\n        validators: [Validators.required],\r\n      });\r\n      this.form.push(newcontrol);\r\n    });\r\n  }\r\n  \r\n  OnSubmit() {\r\n    \r\n    if (this.form.valid) {\r\n      this.emptyFields = false;\r\n      let newRecord: Record<string, any> = {};\r\n      newRecord['Lots'] = [];\r\n      let i = 0;\r\n      this.formInputs[this.formType].forEach((field: string) => {\r\n        if (i<=4) {\r\n          \r\n          newRecord[field[0].toLowerCase()] = this.form.value.at(i) as string;\r\n        } else {\r\n          newRecord[\"Lots\"].push({name  : this.form.value.at(i)})\r\n        }\r\n        i++;\r\n      });\r\n      this.notify.emit(newRecord);\r\n      console.log(newRecord);\r\n    } else {\r\n      this.emptyFields = true;\r\n    }\r\n  }\r\n\r\n  OnClickAddField() {\r\n    console.log('stuff happeninng');\r\n\r\n    let newcontrol = this.formbuilder.control('', {\r\n      validators: [Validators.required],\r\n    });\r\n    this.form.push(newcontrol);\r\n    this.formInputs[this.formType].push([\r\n      'Lot ' + this.NewFieldCounter,\r\n      'text',\r\n    ]);\r\n    this.NewFieldCounter++;\r\n    // console.log(this.fieldList);\r\n\r\n    // this.ngOnInit()\r\n  }\r\n}\r\n","<form (submit)=\"OnSubmit() \">\r\n    <a *ngIf=\"formType == 'projects'\" routerLink=\"/home/project/list\">&lt;-- Go Back </a>\r\n    <h3>{{title}}</h3>\r\n    <div *ngFor=\"let field of formInputs[formType]; index as  i\">\r\n        <label for=\"{{field[0]}}\">{{field[0]+' :'}} </label>\r\n        <input type=\"{{field[1]}}\" name=\"{{field[0]}}\" [formControl]=\"form.controls[i]\" placeholder=\"{{field[0]+'...'}}\"/>\r\n    </div>\r\n   \r\n    <p *ngIf=\"emptyFields\" style=\"color:red\">All fields are required</p>\r\n    <p *ngIf=\"error\" style=\"color:red\">{{error}}</p>\r\n    <button type=\"button\" (click)=\"OnClickAddField()\">add new field</button>\r\n    <button type=\"submit\">{{button}}</button>\r\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}