{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../post/post.component\";\nfunction SousLotComponent_tr_15_app_post_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-post\", 2);\n    i0.ɵɵlistener(\"notify\", function SousLotComponent_tr_15_app_post_1_Template_app_post_notify_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.OnNotify($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const post_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"Post\", post_r1);\n  }\n}\nfunction SousLotComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, SousLotComponent_tr_15_app_post_1_Template, 1, 1, \"app-post\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.SousLot.posts != false);\n  }\n}\nexport class SousLotComponent {\n  constructor() {\n    this.SousLot = {\n      id: '',\n      posts: [{\n        id: '123',\n        designation: 'whateveer',\n        unit: 'm',\n        total: '200',\n        qte: '10',\n        pu: '20',\n        tva: ''\n      }, {\n        id: '124',\n        designation: 'whateveer',\n        unit: 'm',\n        total: '20',\n        qte: '1',\n        pu: '20',\n        tva: ''\n      }]\n    };\n    this.notify = new EventEmitter();\n  }\n  NotEmpty() {\n    return Array.isArray(this.SousLot.posts) && this.SousLot.posts.length != 0;\n  }\n  ngOnInit() {}\n  OnNotify(data) {\n    console.log(\"from sous-Lot\");\n    console.log(data);\n  }\n}\nSousLotComponent.ɵfac = function SousLotComponent_Factory(t) {\n  return new (t || SousLotComponent)();\n};\nSousLotComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SousLotComponent,\n  selectors: [[\"app-sous-lot\"]],\n  inputs: {\n    SousLot: \"SousLot\"\n  },\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 16,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"style\", \"display: contents;\", 3, \"Post\", \"notify\", 4, \"ngIf\"], [2, \"display\", \"contents\", 3, \"Post\", \"notify\"]],\n  template: function SousLotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"th\");\n      i0.ɵɵtext(3, \"Designation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"th\");\n      i0.ɵɵtext(5, \"qte\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"unit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"tva\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"prix unitaire\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Total\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, SousLotComponent_tr_15_Template, 2, 1, \"tr\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.SousLot.posts);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.PostComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","SousLotComponent_tr_15_app_post_1_Template_app_post_notify_0_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","OnNotify","ɵɵelementEnd","ɵɵproperty","post_r1","ɵɵtemplate","SousLotComponent_tr_15_app_post_1_Template","ɵɵadvance","ctx_r0","SousLot","posts","SousLotComponent","constructor","id","designation","unit","total","qte","pu","tva","notify","NotEmpty","Array","isArray","length","ngOnInit","data","console","log","selectors","inputs","outputs","decls","vars","consts","template","SousLotComponent_Template","rf","ctx","ɵɵtext","SousLotComponent_tr_15_Template"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\sous-lot\\sous-lot.component.ts","C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\sous-lot\\sous-lot.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-sous-lot',\n  templateUrl: './sous-lot.component.html',\n  styleUrls: ['./sous-lot.component.scss']\n})\nexport class SousLotComponent implements OnInit {\n  @Input() SousLot = {\n    id : '',\n    posts : [\n      {\n        id : '123', \n        designation : 'whateveer',\n        unit : 'm',\n        total : '200',\n        qte : '10',\n        pu : '20',\n        tva : ''\n      },\n      {\n        id : '124', \n        designation : 'whateveer',\n        unit : 'm',\n        total : '20',\n        qte : '1',\n        pu : '20',\n        tva : ''\n      }\n    ]\n  }\n  @Output() notify = new EventEmitter()\n\n  NotEmpty(){\n   return Array.isArray(this.SousLot.posts ) && this.SousLot.posts.length != 0 \n  }\n  ngOnInit(){\n    \n  }\n  OnNotify(data : Object){\n    console.log(\"from sous-Lot\");\n    console.log(data);\n    \n    \n  }\n\n}\n","<table>\n    <thead>\n        <th>Designation</th>\n        <th>qte</th>\n        <th>unit</th>\n        <th>tva</th>\n        <th>prix unitaire</th>\n        <th>Total</th>\n\n    </thead>\n    <tbody>\n        <tr  *ngFor=\"let post of SousLot.posts\" >\n        <app-post *ngIf=\"SousLot.posts != false\"[Post]=\"post\" (notify)=\"OnNotify($event)\" style=\"display: contents;\"></app-post>\n        </tr>\n    </tbody>\n</table>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}