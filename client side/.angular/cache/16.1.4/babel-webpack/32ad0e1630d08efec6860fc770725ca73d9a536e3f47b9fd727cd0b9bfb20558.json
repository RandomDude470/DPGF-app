{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class PostComponent {\n  constructor() {\n    this.Post = {\n      id: '',\n      designation: 'ppopo',\n      pu: '',\n      tva: '',\n      total: '',\n      unit: '',\n      qte: ''\n    };\n    this.notify = new EventEmitter();\n    this.form = new FormGroup({\n      designation: new FormControl(this.Post.designation),\n      qte: new FormControl(this.Post.qte),\n      unit: new FormControl(this.Post.unit),\n      tva: new FormControl(this.Post.tva),\n      pu: new FormControl(this.Post.pu),\n      total: new FormControl(this.Post.total)\n    });\n    this.total = 0;\n  }\n  OnBlur() {\n    let obj = this.form.value;\n    if (this.Post.id != '') {\n      obj['id'] = this.Post.id;\n    } else {\n      throw new Error('No Post Id');\n    }\n    let qte = Number(this.form.value.qte);\n    let pu = Number(this.form.value.pu);\n    let tva = isNaN(Number(this.form.value.tva)) ? 0 : Number(this.form.value.tva);\n    this.total = isNaN(pu) || isNaN(qte) ? 0 : pu * qte + pu * qte * tva / 100;\n    obj['total'] = String(this.total);\n    console.log(obj);\n    this.notify.emit(obj);\n  }\n}\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)();\n};\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  inputs: {\n    Post: \"Post\"\n  },\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 12,\n  vars: 6,\n  consts: [[\"type\", \"text\", 3, \"formControl\", \"blur\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"td\")(1, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_1_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(2, \"td\")(3, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_3_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"td\")(5, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_5_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"td\")(7, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_7_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"td\")(9, \"input\", 0);\n      i0.ɵɵlistener(\"blur\", function PostComponent_Template_input_blur_9_listener() {\n        return ctx.OnBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"td\");\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.designation);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.qte);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.unit);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.tva);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.pu);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.total);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective],\n  styles: [\"input[_ngcontent-%COMP%] {\\n  width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZHBnZi9wb3N0L3Bvc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dHtcclxuICAgIHdpZHRoOiAxMDBweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["EventEmitter","FormControl","FormGroup","PostComponent","constructor","Post","id","designation","pu","tva","total","unit","qte","notify","form","OnBlur","obj","value","Error","Number","isNaN","String","console","log","emit","selectors","inputs","outputs","decls","vars","consts","template","PostComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","PostComponent_Template_input_blur_1_listener","ɵɵelementEnd","PostComponent_Template_input_blur_3_listener","PostComponent_Template_input_blur_5_listener","PostComponent_Template_input_blur_7_listener","PostComponent_Template_input_blur_9_listener","ɵɵtext","ɵɵadvance","ɵɵproperty","controls","ɵɵtextInterpolate"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\post\\post.component.ts","C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\dpgf\\post\\post.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n})\nexport class PostComponent {\n  @Input() Post: {\n    id: string;\n    designation: string;\n    pu: string;\n    tva: string;\n    total: string;\n    unit: string;\n    qte: string;\n  } = {\n    id: '',\n    designation: 'ppopo',\n    pu: '',\n    tva: '',\n    total: '',\n    unit: '',\n    qte: ''\n  };\n  @Output() notify = new EventEmitter();\n  form = new FormGroup({\n    designation: new FormControl(this.Post.designation),\n    qte: new FormControl(this.Post.qte),\n    unit: new FormControl(this.Post.unit),\n    tva: new FormControl(this.Post.tva),\n    pu: new FormControl(this.Post.pu),\n    total: new FormControl(this.Post.total),\n  });\n  total = 0;\n\n  OnBlur() {\n    let obj = this.form.value as Record<string, string>;\n    if (this.Post.id != '') {\n      obj['id'] = this.Post.id;\n    } else {\n      throw new Error('No Post Id');\n    }\n    let qte = Number(this.form.value.qte);\n    let pu = Number(this.form.value.pu);\n    let tva = isNaN(Number(this.form.value.tva))? 0: Number(this.form.value.tva);\n    this.total = isNaN(pu) || isNaN(qte) ? 0 : pu * qte + (pu * qte * tva) / 100;\n    obj['total'] = String(this.total);\n    console.log(obj);\n    this.notify.emit(obj);\n  }\n}\n","<td><input type=\"text\" [formControl]=\"form.controls.designation\" (blur)=\"OnBlur()\"></td>\n<td><input type=\"text\" [formControl]=\"form.controls.qte\" (blur)=\"OnBlur()\"></td>\n<td><input type=\"text\" [formControl]=\"form.controls.unit\" (blur)=\"OnBlur()\"></td>\n<td><input type=\"text\" [formControl]=\"form.controls.tva\" (blur)=\"OnBlur()\"></td>\n<td><input type=\"text\" [formControl]=\"form.controls.pu\" (blur)=\"OnBlur()\"></td>\n<td>{{total}}</td>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}