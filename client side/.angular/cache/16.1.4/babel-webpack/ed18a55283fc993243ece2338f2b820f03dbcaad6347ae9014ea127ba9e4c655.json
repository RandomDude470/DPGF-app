{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction FormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r2[0]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", field_r2[0], \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"type\", field_r2[1]);\n    i0.ɵɵpropertyInterpolate(\"name\", field_r2[0]);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.form.controls[i_r3]);\n  }\n}\nfunction FormComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1, \"All fields are required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FormComponent {\n  //// methods\n  constructor(formbuilder) {\n    this.formbuilder = formbuilder;\n    //Input\n    this.fieldList = [];\n    this.title = '';\n    this.button = '';\n    //Outut\n    this.notify = new EventEmitter();\n    //internal\n    this.form = this.formbuilder.array([]);\n    this.emptyFields = false;\n  }\n  ngOnInit() {\n    this.fieldList.forEach(() => {\n      let newcontrol = this.formbuilder.control('', {\n        validators: [Validators.required]\n      });\n      this.form.push(newcontrol);\n    });\n  }\n  OnSubmit() {\n    if (this.form.valid) {\n      let newRecord = {};\n      let i = 0;\n      this.fieldList.forEach(field => {\n        newRecord[field[0]] = this.form.value.at(i);\n        i++;\n      });\n      this.notify.emit(newRecord);\n    } else {\n      this.emptyFields = true;\n    }\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  inputs: {\n    fieldList: \"fieldList\",\n    title: \"title\",\n    button: \"button\"\n  },\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 5,\n  vars: 3,\n  consts: [[3, \"submit\"], [4, \"ngFor\", \"ngForOf\"], [\"style\", \"color:red\", 4, \"ngIf\"], [\"type\", \"submit\"], [3, \"for\"], [\"id\", \"\", 3, \"type\", \"name\", \"formControl\"], [2, \"color\", \"red\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function FormComponent_Template_form_submit_0_listener() {\n        return ctx.OnSubmit();\n      });\n      i0.ɵɵtemplate(1, FormComponent_div_1_Template, 4, 5, \"div\", 1);\n      i0.ɵɵtemplate(2, FormComponent_p_2_Template, 2, 0, \"p\", 2);\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fieldList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.emptyFields);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.button);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate","field_r2","ɵɵtextInterpolate1","ɵɵproperty","ctx_r0","form","controls","i_r3","FormComponent","constructor","formbuilder","fieldList","title","button","notify","array","emptyFields","ngOnInit","forEach","newcontrol","control","validators","required","push","OnSubmit","valid","newRecord","i","field","value","at","emit","ɵɵdirectiveInject","i1","FormBuilder","selectors","inputs","outputs","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵlistener","FormComponent_Template_form_submit_0_listener","ɵɵtemplate","FormComponent_div_1_Template","FormComponent_p_2_Template","ɵɵtextInterpolate"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\auth\\form\\form.component.ts","C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\auth\\form\\form.component.html"],"sourcesContent":["import { Component, Input, Output,EventEmitter,OnInit } from '@angular/core';\nimport { FormArray, FormBuilder,Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n  //Input\n  @Input() fieldList: string[][] =[]\n  @Input() title: string =''\n  @Input() button: string =''\n  //Outut\n  @Output() notify = new EventEmitter() \n  //internal\n  form = this.formbuilder.array([])\n  emptyFields = false\n//// methods\n  constructor(private formbuilder : FormBuilder){}\n  ngOnInit(){\n    this.fieldList.forEach(()=>{\n      let newcontrol = this.formbuilder.control('',{validators : [Validators.required]})\n      this.form.push(newcontrol)\n    })\n  }\n  OnSubmit(){\n    if (this.form.valid) {\n      \n      let newRecord : Record<string , string>  = {}\n      let i =0\n      this.fieldList.forEach((field)=>{\n        newRecord[field[0]] = this.form.value.at(i) as string\n        i++ \n      })\n      this.notify.emit(newRecord)\n    }else {\n      this.emptyFields = true\n    }\n  }\n}\n","<form (submit)=\"OnSubmit() \">\n    <div *ngFor=\"let field of fieldList; index as  i\">\n        <label for=\"{{field[0]}}\">{{field[0]}} </label>\n        <input type=\"{{field[1]}}\" name=\"{{field[0]}}\" id=\"\" [formControl]=\"form.controls[i]\" />\n    </div>\n    <p *ngIf=\"emptyFields\" style=\"color:red\">All fields are required</p>\n    <button type=\"submit\">{{button}}</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}