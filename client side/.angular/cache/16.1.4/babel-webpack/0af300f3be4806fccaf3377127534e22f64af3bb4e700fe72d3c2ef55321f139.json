{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../form/form.component\";\nconst _c0 = function () {\n  return [\"Email\", \"text\"];\n};\nconst _c1 = function () {\n  return [\"Password\", \"password\"];\n};\nconst _c2 = function (a0, a1) {\n  return [a0, a1];\n};\nexport class LoginComponent {\n  constructor(Auth, router) {\n    this.Auth = Auth;\n    this.router = router;\n  }\n  //Methods\n  OnNotify(data) {\n    console.log(data);\n    const showResult = res => {\n      console.log(`response from service : ${res}`);\n      if (res[1] == \"error\") {\n        this.badLogin = res[0];\n      } else {\n        document.cookie = \"TOKEN=\" + res[0] + \";path=/;\";\n        this.router.navigate([\"/home\"]);\n      }\n    };\n    this.Auth.Login(data).then(showResult).catch(console.log);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 2,\n  vars: 7,\n  consts: [[\"button\", \"Log in\", \"title\", \"Log In\", 3, \"error\", \"fieldList\", \"notify\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"app-form\", 0);\n      i0.ɵɵlistener(\"notify\", function LoginComponent_Template_app_form_notify_1_listener($event) {\n        return ctx.OnNotify($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"error\", ctx.badLogin)(\"fieldList\", i0.ɵɵpureFunction2(4, _c2, i0.ɵɵpureFunction0(2, _c0), i0.ɵɵpureFunction0(3, _c1)));\n    }\n  },\n  dependencies: [i3.FormComponent],\n  styles: [\"div[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvX21peGlucy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VDRUksYUFBQTtFQUNBLHNCQUFBO0VEREYsWUFBQTtFQUNBLHVCQUFBO0FBREYiLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlIFwiLi4vLi4vLi4vYXNzZXRzL21peGluc1wiIGFzIG1peGlucztcclxuQHVzZSBcIi4uLy4uLy4uL2Fzc2V0cy9HbG9iYWxWYXJzXCIgYXMgdmFycztcclxuXHJcbmRpdiB7XHJcbiAgQGluY2x1ZGUgbWl4aW5zLmZsZXgtdmVyO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG4iLCJAbWl4aW4gZmxleC1ob3Ige1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbn1cclxuQG1peGluIGZsZXgtdmVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuQG1peGluIG1hcmdpbi1hdXRvLWNlbnRlciB7XHJcbiAgICBkaXNwbGF5IDogYmxvY2s7XHJcbiAgICBtYXJnaW4taW5saW5lIDogYXV0bztcclxufVxyXG5AbWl4aW4gYnV0dG9uKCRwciAsICRzZWMsJGZvbnQtc2l6ZSAsICRwYWRkaW5nLWlubGluZSwgJHBhZGRpbmctYmxvY2spIHtcclxuICAgIGNvbG9yIDogJHNlYztcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGNvbG9yOiAkcHIgLCAkYW1vdW50OiAxMyk7XHJcbiAgICBwYWRkaW5nLWlubGluZTogJHBhZGRpbmctaW5saW5lO1xyXG4gICAgcGFkZGluZy1ibG9jazogJHBhZGRpbmctYmxvY2s7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzIDogMjBweDtcclxuICAgIGZvbnQtc2l6ZSA6ICRmb250LXNpemUgO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGJveC1zaGFkb3c6IDRweCAycHggMHB4IDBweDtcclxuICAgIG1hcmdpbi10b3A6IDRyZW07XHJcbiAgICBib3JkZXI6IHNvbGlkIDFweCAkc2VjO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3M7XHJcbiAgICAmOmhvdmVye1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWM7XHJcbiAgICAgICAgY29sb3I6IGxpZ2h0ZW4oJGNvbG9yOiAkcHIgLCAkYW1vdW50OiAxMyk7XHJcbiAgICAgICAgYm9yZGVyOiBzb2xpZCAxcHggbGlnaHRlbigkY29sb3I6ICRwciwgJGFtb3VudDogMjApO1xyXG5cclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","Auth","router","OnNotify","data","console","log","showResult","res","badLogin","document","cookie","navigate","Login","then","catch","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_app_form_notify_1_listener","$event","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction2","_c2","ɵɵpureFunction0","_c0","_c1"],"sources":["C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\Yassir\\Desktop\\web\\Angular-test\\aglo-clone\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/Services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  \n  constructor(private Auth  : AuthService , private router : Router){}\n  //Properties\n  badLogin : undefined | string\n  \n  //Methods\n  OnNotify(data : Record<string,string>){\n    console.log(data);\n\n    const showResult = (res : string[])=> {\n      console.log(`response from service : ${res}`);\n      if (res[1] == \"error\") {\n        this.badLogin = res[0]\n\n      }else{\n        document.cookie = \"TOKEN=\"+res[0]+\";path=/;\"\n        this.router.navigate([\"/home\"])\n        \n      }\n      \n    }\n\n    this.Auth.Login(data)\n    .then(showResult)\n    .catch(console.log)\n  }\n}\n","<div>\n<app-form [error]=\"badLogin\"  [fieldList]=\"[['Email','text'],['Password','password']]\" button=\"Log in\" (notify)=\"OnNotify($event)\" title=\"Log In\"></app-form>\n</div>"],"mappings":";;;;;;;;;;;;;AASA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAmB,EAAWC,MAAe;IAA7C,KAAAD,IAAI,GAAJA,IAAI;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAInE;EACAC,QAAQA,CAACC,IAA4B;IACnCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjB,MAAMG,UAAU,GAAIC,GAAc,IAAG;MACnCH,OAAO,CAACC,GAAG,CAAC,2BAA2BE,GAAG,EAAE,CAAC;MAC7C,IAAIA,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,EAAE;QACrB,IAAI,CAACC,QAAQ,GAAGD,GAAG,CAAC,CAAC,CAAC;OAEvB,MAAI;QACHE,QAAQ,CAACC,MAAM,GAAG,QAAQ,GAACH,GAAG,CAAC,CAAC,CAAC,GAAC,UAAU;QAC5C,IAAI,CAACN,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;IAInC,CAAC;IAED,IAAI,CAACX,IAAI,CAACY,KAAK,CAACT,IAAI,CAAC,CACpBU,IAAI,CAACP,UAAU,CAAC,CAChBQ,KAAK,CAACV,OAAO,CAACC,GAAG,CAAC;EACrB;;AA1BWP,cAAc,C;mBAAdA,cAAc,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAdtB,cAAc,C;QAAdA,cAAc;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT3BZ,EAAA,CAAAc,cAAA,UAAK;MACkGd,EAAA,CAAAe,UAAA,oBAAAC,mDAAAC,MAAA;QAAA,OAAUJ,GAAA,CAAA1B,QAAA,CAAA8B,MAAA,CAAgB;MAAA,EAAC;MAAgBjB,EAAA,CAAAkB,YAAA,EAAW;;;MAAnJlB,EAAA,CAAAmB,SAAA,GAAkB;MAAlBnB,EAAA,CAAAoB,UAAA,UAAAP,GAAA,CAAApB,QAAA,CAAkB,cAAAO,EAAA,CAAAqB,eAAA,IAAAC,GAAA,EAAAtB,EAAA,CAAAuB,eAAA,IAAAC,GAAA,GAAAxB,EAAA,CAAAuB,eAAA,IAAAE,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}